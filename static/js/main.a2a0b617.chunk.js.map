{"version":3,"sources":["components/Form.tsx","components/Spiral.tsx","App.tsx","index.tsx"],"names":["Form","props","useState","n","setN","spiral","setSpiral","handleSubmit","e","preventDefault","result","Array","i","left","top","right","bottom","counter","createSpiral","className","onSubmit","type","value","onChange","target","parseInt","onClick","map","row","col","j","App","solveSpiralArray","rootElement","document","getElementById","render"],"mappings":"uMA+CeA,MA5Cf,SAAcC,GACZ,MAAkBC,mBAAS,GAA3B,mBAAOC,EAAP,KAAUC,EAAV,KACA,EAA4BF,mBAAS,CAAC,KAAtC,mBAAOG,EAAP,KAAeC,EAAf,KAEA,SAASC,EAAaC,GACpBA,EAAEC,iBACQ,OAANN,GAGJG,ECZW,SAAsBH,GACnC,GAAIA,EAAI,EACN,MAAO,GAKT,IADA,IAAIO,EAAS,IAAIC,MAAMR,GACdS,EAAI,EAAGA,EAAIT,EAAGS,IACrBF,EAAOE,GAAK,IAAID,MAAMR,GASxB,IANA,IAAIU,EAAO,EACTC,EAAM,EACJC,EAAQZ,EACVa,EAASb,EACPc,EAAU,EAEPJ,EAAOE,GAASD,EAAME,GAAQ,CAEnC,IAAK,IAAIJ,EAAIC,EAAMD,EAAIG,EAAOH,IAC5BF,EAAOI,GAAKF,GAAKK,IAKnB,IAAK,IAAIL,IAHTE,EAGkBF,EAAII,EAAQJ,IAC5BF,EAAOE,GAAGG,EAAQ,GAAKE,IAKzB,IAAK,IAAIL,IAHTG,EAGqB,EAAGH,GAAKC,EAAMD,IACjCF,EAAOM,EAAS,GAAGJ,GAAKK,IAK1B,IAAK,IAAIL,IAHTI,EAGsB,EAAGJ,GAAKE,EAAKF,IACjCF,EAAOE,GAAGC,GAAQI,IAEpBJ,IAEF,OAAOH,ED9BKQ,CAAaf,IASzB,OACE,sBAAKgB,UAAU,iBAAf,UACE,uBAAMC,SAAU,kBAAMb,GAAtB,UACE,0HAEmB,oCAFnB,KAGE,uBAAOc,KAAK,SAASC,MAAOnB,EAAGoB,SAZvC,SAAsBf,GACdA,EAAEgB,OAAOF,OACblB,EAAKqB,SAASjB,EAAEgB,OAAOF,MAAO,WAY5B,wBAAQD,KAAK,SAASK,QAASnB,EAA/B,uBAIF,gCACE,gCACGF,EAAOsB,KAAI,SAACC,EAAKhB,GAAN,OACV,6BACGgB,EAAID,KAAI,SAACE,EAAKC,GAAN,OACP,6BAAaD,GAAJC,OAFJlB,cEjCN,SAASmB,IACtB,OACE,sBAAKZ,UAAU,MAAf,UACE,kEACA,cAAC,EAAD,CAAMa,kBAAgB,OCH5B,IAAMC,EAAcC,SAASC,eAAe,QAC5CC,iBAAO,cAACL,EAAD,IAASE,I","file":"static/js/main.a2a0b617.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport createSpiral from \"./Spiral\";\r\n\r\nfunction Form(props: any) {\r\n  const [n, setN] = useState(0);\r\n  const [spiral, setSpiral] = useState([[]]);\r\n\r\n  function handleSubmit(e: React.MouseEvent<HTMLButtonElement>) {\r\n    e.preventDefault();\r\n    if (n === null) {\r\n      return;\r\n    }\r\n    setSpiral(createSpiral(n));\r\n  }\r\n\r\n  function handleChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n    if (!!e.target.value) {\r\n      setN(parseInt(e.target.value, 10));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <form onSubmit={() => handleSubmit}>\r\n        <label>\r\n          Enter a positive integer value for 'N' to create N x N spiral array\r\n          with values [1, N<sup>2</sup>]:\r\n          <input type=\"number\" value={n} onChange={handleChange} />\r\n        </label>\r\n        <button type=\"submit\" onClick={handleSubmit}>\r\n          Submit\r\n        </button>\r\n      </form>\r\n      <table>\r\n        <tbody>\r\n          {spiral.map((row, i) => (\r\n            <tr key={i}>\r\n              {row.map((col, j) => (\r\n                <td key={j}>{col}</td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\nexport default Form;\r\n","export default function createSpiral(n: number) {\r\n  if (n < 1) {\r\n    return [];\r\n  }\r\n\r\n  // create an array with 'n' rows and 'n' columns to store the result\r\n  let result = new Array(n);\r\n  for (let i = 0; i < n; i++) {\r\n    result[i] = new Array(n);\r\n  }\r\n\r\n  let left = 0,\r\n    top = 0;\r\n  let right = n,\r\n    bottom = n;\r\n  let counter = 1;\r\n\r\n  while (left < right && top < bottom) {\r\n    // set all elements of top row from left to right\r\n    for (let i = left; i < right; i++) {\r\n      result[top][i] = counter++;\r\n    }\r\n    top++;\r\n\r\n    // set all elements of right column from top to bottom\r\n    for (let i = top; i < bottom; i++) {\r\n      result[i][right - 1] = counter++;\r\n    }\r\n    right--;\r\n\r\n    // set all elements of bottom row from right to left\r\n    for (let i = right - 1; i >= left; i--) {\r\n      result[bottom - 1][i] = counter++;\r\n    }\r\n    bottom--;\r\n\r\n    // set all elements of left column from bottom to top\r\n    for (let i = bottom - 1; i >= top; i--) {\r\n      result[i][left] = counter++;\r\n    }\r\n    left++;\r\n  }\r\n  return result;\r\n}\r\n","import \"./styles.css\";\nimport Form from \"./components/Form\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <h1>Jobber Coding Challenge - Spiral</h1>\n      <Form solveSpiralArray />\n    </div>\n  );\n}\n","import { render } from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n"],"sourceRoot":""}